# User configuration

export PATH="/usr/local/sbin:/usr/local/bin:/usr/bin:/usr/bin/site_perl:/usr/bin/vendor_perl:/usr/bin/core_perl"

export ANDROID_SDK_ROOT="$HOME/sdk/android-sdk-linux"
export PATH="$ANDROID_SDK_ROOT/platform-tools:$PATH"
export PATH="$ANDROID_SDK_ROOT/tools:$PATH"
export PATH="$ANDROID_SDK_ROOT/ndk-bundle:$PATH"

export PATH="$HOME/.rbenv/bin:$PATH"
eval "$(rbenv init -)"
export PYENV_ROOT="$HOME/.pyenv"
export PATH="$PYENV_ROOT/bin:$PATH"
eval "$(pyenv init -)"
eval "$(pyenv virtualenv-init -)"
export PATH="$HOME/.exenv/bin:$PATH"
eval "$(exenv init -)"
export PATH="$HOME/.ndenv/bin:$PATH"
eval "$(ndenv init -)"
export PATH="$HOME/.crenv/bin:$PATH"
eval "$(crenv init -)"

export GOPATH="$HOME/.go"
export PATH="$GOPATH/bin:$PATH"

#THIS MUST BE AT THE END OF THE FILE FOR SDKMAN TO WORK!!!
export SDKMAN_DIR="/home/kaki/.sdkman"
[[ -s "/home/kaki/.sdkman/bin/sdkman-init.sh" ]] && source "/home/kaki/.sdkman/bin/sdkman-init.sh"

export PATH="$HOME/bin:$PATH"
# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=ja_JP.UTF-8

# Preferred editor for local and remote sessions
 if [[ -n $SSH_CONNECTION ]]; then
   export EDITOR='vim'
 else
   export EDITOR='vim'
 fi
# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# ssh
# export SSH_KEY_PATH="~/.ssh/dsa_id"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"

alias tmux="tmux -2"

function _peco-select-history() {
  local tac
  if which tac > /dev/null; then
    tac="tac"
  else
    tac="tail -r"
  fi
  BUFFER=$(\
    \history -n 1 |\
    eval $tac |\
    peco --query "$LBUFFER"\
    )
  CURSOR=$#BUFFER
  zle clear-screen
}
zle -N peco-select-history _peco-select-history

function _peco-select-docker-history() {
  local tac
  if which tac > /dev/null; then
    tac="tac"
  else
    tac="tail -r"
  fi
  BUFFER=$(\
    \history -n 1 |\
    eval $tac |\
    grep "docker run" |\
    peco --query "$LBUFFER"\
    )
  CURSOR=$#BUFFER
  zle clear-screen
}
zle -N peco-select-docker-history _peco-select-docker-history

bindkey '^R' peco-select-history
bindkey '^Rd' peco-select-docker-history
